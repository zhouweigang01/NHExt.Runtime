//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18408
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Net.Code.Builder.Properties {
    using System;
    
    
    /// <summary>
    ///   一个强类型的资源类，用于查找本地化的字符串等。
    /// </summary>
    // 此类是由 StronglyTypedResourceBuilder
    // 类通过类似于 ResGen 或 Visual Studio 的工具自动生成的。
    // 若要添加或移除成员，请编辑 .ResX 文件，然后重新运行 ResGen
    // (以 /str 作为命令选项)，或重新生成 VS 项目。
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   返回此类使用的缓存的 ResourceManager 实例。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Net.Code.Builder.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   使用此强类型资源类，为所有资源查找
        ///   重写当前线程的 CurrentUICulture 属性。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   查找类似 using System.Reflection;
        ///using System.Runtime.CompilerServices;
        ///using System.Runtime.InteropServices;
        ///
        ///// 有关程序集的常规信息通过以下
        ///// 特性集控制。更改这些特性值可修改
        ///// 与程序集关联的信息。
        ///[assembly: AssemblyTitle(&quot;{IWEHAVE.GAIA}&quot;)]
        ///[assembly: AssemblyDescription(&quot;&quot;)]
        ///[assembly: AssemblyConfiguration(&quot;&quot;)]
        ///[assembly: AssemblyCompany(&quot;GAIA&quot;)]
        ///[assembly: AssemblyProduct(&quot;{IWEHAVE.GAIA}&quot;)]
        ///[assembly: AssemblyCopyright(&quot;Copyright © GAIA 2012&quot;)]
        ///[assembly: AssemblyTrademark(&quot;&quot;)]
        ///[assembly: AssemblyCulture(&quot;&quot;)]
        ///
        ///// 将 ComVisible 设置为 [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string AssemblyInfo {
            get {
                return ResourceManager.GetString("AssemblyInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 using System;
        ///using System.Collections.Generic;
        ///using System.Linq;
        ///using System.Text;
        ///
        ///namespace {NameSpace}
        ///{
        ///    public partial class {Class} : NHExt.Runtime.Model.BizProxy
        ///    {
        ///		private string _guid =&quot;{Guid}&quot;;
        ///		public override string Guid {
        ///			get{
        ///				return this._guid;
        ///			}
        ///		}
        ///		private string _proxyName = &quot;{NameSpace}.{Class}&quot;;
        ///		public override string ProxyName{
        ///			get{
        ///				return this._proxyName;
        ///			}
        ///		}
        ///		private NHExt.Runtime.Session.CallerTypeEnum _callerType = NHExt.Run [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string BPClassBeginTemplate {
            get {
                return ResourceManager.GetString("BPClassBeginTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 }
        ///} 的本地化字符串。
        /// </summary>
        internal static string BPClassEndTemplate {
            get {
                return ResourceManager.GetString("BPClassEndTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 using System;
        ///using System.Collections.Generic;
        ///using System.Linq;
        ///using System.Text;
        ///
        ///namespace {NameSpace}
        ///{
        ///    public partial class {Class}
        ///    {
        ///	    private {Return} DoExtend()
        ///        {
        ///            throw new NotImplementedException();
        ///        }
        ///	}
        ///} 的本地化字符串。
        /// </summary>
        internal static string BPClassExtendTemplate {
            get {
                return ResourceManager.GetString("BPClassExtendTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 protected override void InitParameter(NHExt.Runtime.Proxy.ProxyContext ctx){
        ///	base.InitParameter(ctx);
        ///	if(ctx != null){ 的本地化字符串。
        /// </summary>
        internal static string BPClassInitParamBeginTemplate {
            get {
                return ResourceManager.GetString("BPClassInitParamBeginTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 if(this.CallerType == NHExt.Runtime.Session.CallerTypeEnum.WCF){
        ///	this._{Code} = NHExt.Runtime.Serialize.XmlSerialize.DeSerialize&lt;{TypeString} {IsNull}&gt;(ctx.ParamList[{Index}].ToString());
        ///	ctx.ParamList[{Index}] = this._{Code};
        ///}
        ///else{
        ///	if(ctx.ParamList.Count &gt; {Index}){
        ///	this._{Code} = ({TypeString} {IsNull})ctx.ParamList[{Index}];
        ///	}else{
        ///		ctx.ParamList.Add(this._{Code});
        ///	}
        ///} 的本地化字符串。
        /// </summary>
        internal static string BPClassInitParamCommonTemplate {
            get {
                return ResourceManager.GetString("BPClassInitParamCommonTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 if(this.CallerType == NHExt.Runtime.Session.CallerTypeEnum.WCF){
        ///	this._{Code} = NHExt.Runtime.Serialize.XmlSerialize.DeSerialize&lt;List&lt;{TypeString} {IsNull}&gt;&gt;(ctx.ParamList[{Index}].ToString());
        ///	ctx.ParamList[{Index}] = this._{Code};
        ///}
        ///else{
        ///	if(ctx.ParamList.Count &gt; {Index}){
        ///		this._{Code} = (List&lt;{TypeString} {IsNull}&gt;)ctx.ParamList[{Index}];
        ///	 }else{
        ///		ctx.ParamList.Add(this._{Code});
        ///	}
        ///} 的本地化字符串。
        /// </summary>
        internal static string BPClassInitParamCompositionTemplate {
            get {
                return ResourceManager.GetString("BPClassInitParamCompositionTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 	}
        ///} 的本地化字符串。
        /// </summary>
        internal static string BPClassInitParamEndTemplate {
            get {
                return ResourceManager.GetString("BPClassInitParamEndTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 /// &lt;summary&gt;
        ////// {Memo}
        ////// &lt;/summary&gt;
        ///private {TypeString} {IsNull} _{Code} ;
        ////// &lt;summary&gt;
        ////// {Memo}
        ////// &lt;/summary&gt;
        ///public virtual {TypeString}{IsNull} {Code}
        ///{
        ///get{
        ///return _{Code};
        ///}
        ///set{
        /// _{Code}= value;
        ///}
        ///}
        /// 的本地化字符串。
        /// </summary>
        internal static string BPCommonTemplate {
            get {
                return ResourceManager.GetString("BPCommonTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 /// &lt;summary&gt;
        ////// {Memo}
        ////// &lt;/summary&gt;
        ///private List&lt;{TypeString}{IsNull}&gt; _{Code} ;
        ////// &lt;summary&gt;
        ////// {Memo}
        ////// &lt;/summary&gt;
        ///public virtual List&lt;{TypeString}{IsNull}&gt; {Code}
        ///{
        ///get{
        ///return _{Code};
        ///}
        ///set{
        /// _{Code}= value;
        ///}
        ///}
        /// 的本地化字符串。
        /// </summary>
        internal static string BPCompositionTemplate {
            get {
                return ResourceManager.GetString("BPCompositionTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 private {Return} DoCommon(NHExt.Runtime.Proxy.ProxyContext ctx)
        ///{
        ///	Exception errEx = null;
        ///	try{
        ///		using (NHExt.Runtime.Session.Transaction trans = NHExt.Runtime.Session.Transaction.New({Trans}, ctx.UseReadDB))
        ///		{
        ///			List&lt;NHExt.Runtime.AOP.IProxyAspect&gt; aspectList = new List&lt;NHExt.Runtime.AOP.IProxyAspect&gt;();
        ///			try
        ///			{
        ///				this.InitParameter(ctx);
        ///				ctx.ProxyStack.Add(new NHExt.Runtime.Auth.ProxyProperty() { ProxyGuid = this.Guid, ProxyName = this.ProxyName });
        ///				aspectList = NHExt.Runtime [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string BPDoCommonObjectTemplate {
            get {
                return ResourceManager.GetString("BPDoCommonObjectTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 internal {Return} Do()
        ///{
        ///    NHExt.Runtime.Proxy.ProxyContext ctx = new NHExt.Runtime.Proxy.ProxyContext();
        ///    ctx.ProxyGuid = this._guid;
        ///    return this.DoCommon(ctx);
        ///}
        ///
        ///internal void DoTask(bool autoRun = false)
        ///{
        ///	this._callerType = NHExt.Runtime.Session.CallerTypeEnum.Reflect;
        ///	NHExt.Runtime.Proxy.ProxyContext ctx = new NHExt.Runtime.Proxy.ProxyContext();
        ///    ctx.ProxyGuid = this._guid;
        ///	NHExt.Runtime.Logger.LoggerInstance.RuntimeLogger.Info(&quot;系统调度任务，使用线程调度服务&quot;);
        ///    NHExt.Runtime.Proxy.Ta [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string BPDoExtendObjectTemplate {
            get {
                return ResourceManager.GetString("BPDoExtendObjectTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 public override object Do(NHExt.Runtime.Proxy.ProxyContext ctx)
        ///{
        ///	this._callerType = NHExt.Runtime.Session.CallerTypeEnum.Reflect;
        ///	var obj = this.TypeConvert(this.DoCommon(ctx));
        ///	return obj;
        ///}
        /// 的本地化字符串。
        /// </summary>
        internal static string BPDoObjectObjectTemplate {
            get {
                return ResourceManager.GetString("BPDoObjectObjectTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 public override NHExt.Runtime.Model.WCFCallDTO DoWCF(NHExt.Runtime.Proxy.ProxyContext ctx)
        ///{
        ///	string xml = string.Empty;
        ///	NHExt.Runtime.Model.WCFCallDTO callDTO = new NHExt.Runtime.Model.WCFCallDTO();
        ///	try
        ///	{
        ///		this._callerType = NHExt.Runtime.Session.CallerTypeEnum.WCF;
        ///		var obj = this.TypeConvert(this.DoCommon(ctx));
        ///		if (obj != null) {
        ///			xml = NHExt.Runtime.Serialize.XmlSerialize.Serialize(obj);
        ///		}else{
        ///			xml = string.Empty;
        ///		}
        ///		callDTO.Success = true;
        ///	}
        ///	catch(Exception ex){
        ///		xm [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string BPDoWcfObjectTemplate {
            get {
                return ResourceManager.GetString("BPDoWcfObjectTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 using System;
        ///using System.Collections.Generic;
        ///using System.Linq;
        ///using System.Text;
        ///
        ///namespace {NameSpace}
        ///{
        ///    public partial class {Class}Proxy : NHExt.Runtime.Model.BizAgent
        ///    {
        ///		private string _guid =&quot;{Guid}&quot;;
        ///		public override string Guid {
        ///			get{
        ///				return _guid;
        ///			}
        ///		}
        ///		private string _proxyName = &quot;{NameSpace}.{Class}Proxy&quot;;
        ///		public override string ProxyName{
        ///			get{
        ///				return this._proxyName;
        ///			}
        ///		}
        /// 的本地化字符串。
        /// </summary>
        internal static string BPProxyClassBeginTemplate {
            get {
                return ResourceManager.GetString("BPProxyClassBeginTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似  
        ///    }
        ///}
        /// 的本地化字符串。
        /// </summary>
        internal static string BPProxyClassEndTemplate {
            get {
                return ResourceManager.GetString("BPProxyClassEndTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 public {Class}Proxy()
        ///{
        ///	this.invoker.RemoteIP = this.RemoteIP;
        ///	this.invoker.DllName = &quot;{NameSpace}.dll&quot;;
        ///    this.invoker.NS = &quot;{NameSpace}&quot;;
        ///    this.invoker.ProxyName = &quot;{Class}&quot;;
        ///}
        /// 的本地化字符串。
        /// </summary>
        internal static string BPProxyConstructorTemplate {
            get {
                return ResourceManager.GetString("BPProxyConstructorTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 public override object DoProxy()
        ///{
        ///	this.invoker.SourcePage = this.SourcePage; 的本地化字符串。
        /// </summary>
        internal static string BPProxyDoCommonBeginTemplate {
            get {
                return ResourceManager.GetString("BPProxyDoCommonBeginTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 	}
        ///	public {Return} Do()
        ///	{
        ///		 {Return} obj = ( {Return})this.DoProxy();
        ///		 return obj;
        ///	}
        /// 的本地化字符串。
        /// </summary>
        internal static string BPProxyDoCommonEndTemplate {
            get {
                return ResourceManager.GetString("BPProxyDoCommonEndTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 	List&lt;NHExt.Runtime.AOP.IAgentAspect&gt; aspectList = NHExt.Runtime.AOP.AspectManager.BuildAgentAspect(this.ProxyName);
        ///	foreach (NHExt.Runtime.AOP.IAgentAspect aspect in aspectList) {
        ///		aspect.BeforeDo(this,invoker.ParamList);
        ///	}
        ///	object obj = this.invoker.Do();
        ///	{Return} result;
        ///	if (this.invoker.CallerType == NHExt.Runtime.Session.CallerTypeEnum.WCF)
        ///	{
        ///		string xml = string.Empty;
        ///		if(obj != null){
        ///			xml = obj.ToString();
        ///		}
        ///		NHExt.Runtime.Logger.LoggerHelper.Info(&quot;远程wcf返回数据为:&quot; + xml, NHExt [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string BPProxyDoCommonTemplate {
            get {
                return ResourceManager.GetString("BPProxyDoCommonTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似  public override object DoProxy()
        ///{
        ///	this.invoker.SourcePage = this.SourcePage; 的本地化字符串。
        /// </summary>
        internal static string BPProxyDoListBeginTemplate {
            get {
                return ResourceManager.GetString("BPProxyDoListBeginTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 	}
        ///	public List&lt;{Return}&gt; Do()
        ///	{
        ///		List&lt;{Return}&gt; obj = (List&lt;{Return}&gt;)this.DoProxy();
        ///		return obj;
        ///	}
        /// 的本地化字符串。
        /// </summary>
        internal static string BPProxyDoListEndTemplate {
            get {
                return ResourceManager.GetString("BPProxyDoListEndTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 	List&lt;NHExt.Runtime.AOP.IAgentAspect&gt; aspectList = NHExt.Runtime.AOP.AspectManager.BuildAgentAspect(this.ProxyName);
        ///	foreach (NHExt.Runtime.AOP.IAgentAspect aspect in aspectList) {
        ///		aspect.BeforeDo(this,invoker.ParamList);
        ///	}
        ///	object obj = this.invoker.Do();
        ///	List&lt;{Return}&gt; result;
        ///	if (this.invoker.CallerType == NHExt.Runtime.Session.CallerTypeEnum.WCF)
        ///	{
        ///		string xml = string.Empty;
        ///		if(obj != null){
        ///			xml = obj.ToString();
        ///		}
        ///		NHExt.Runtime.Logger.LoggerHelper.Info(&quot;远程wcf返回数据为:&quot; + xml, [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string BPProxyDoListTemplate {
            get {
                return ResourceManager.GetString("BPProxyDoListTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 	this.invoker.ParamList.Add(this._{Code}); 的本地化字符串。
        /// </summary>
        internal static string BPProxyInitParamListTemplate {
            get {
                return ResourceManager.GetString("BPProxyInitParamListTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 /// &lt;summary&gt;
        ////// {Memo}
        ////// &lt;/summary&gt;
        ///private {TypeString}{IsNull}  _{Code} ;
        ////// &lt;summary&gt;
        ////// {Memo}
        ////// &lt;/summary&gt;
        ///public virtual {TypeString}{IsNull} {Code}
        ///{
        ///get{
        ///return _{Code};
        ///}
        ///set{
        /// _{Code}= value;
        ///}
        ///} 的本地化字符串。
        /// </summary>
        internal static string BPRefrenceTemplate {
            get {
                return ResourceManager.GetString("BPRefrenceTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 case &quot;{Code}&quot; :
        ///	this._{Code} = this.TransferValue&lt;{TypeString}{IsNull}&gt;(obj);
        ///	break; 的本地化字符串。
        /// </summary>
        internal static string BPSetCommonValueTemplate {
            get {
                return ResourceManager.GetString("BPSetCommonValueTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 case &quot;{Code}&quot; :
        ///	this._{Code} = this.TransferValue&lt;List&lt;{TypeString}&gt; &gt;(obj);
        ///	break; 的本地化字符串。
        /// </summary>
        internal static string BPSetListValueTemplate {
            get {
                return ResourceManager.GetString("BPSetListValueTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 	public override void SetValue(object obj, string memberName)
        ///	{
        ///		switch(memberName){ 的本地化字符串。
        /// </summary>
        internal static string BPSetValueBeginTemplate {
            get {
                return ResourceManager.GetString("BPSetValueBeginTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 		default:
        ///			base.SetValue(obj,memberName);
        ///			break;
        ///		}
        ///	}
        /// 的本地化字符串。
        /// </summary>
        internal static string BPSetValueEndTemplate {
            get {
                return ResourceManager.GetString("BPSetValueEndTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 private {ProxyReturn} TypeConvert({Return} obj)
        ///{
        /// 的本地化字符串。
        /// </summary>
        internal static string BPTypeConvertBeginTemplate {
            get {
                return ResourceManager.GetString("BPTypeConvertBeginTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 return obj;
        /// 的本地化字符串。
        /// </summary>
        internal static string BPTypeConvertCommonTemplate {
            get {
                return ResourceManager.GetString("BPTypeConvertCommonTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 } 的本地化字符串。
        /// </summary>
        internal static string BPTypeConvertEndTemplate {
            get {
                return ResourceManager.GetString("BPTypeConvertEndTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 List&lt;{Return}&gt; result = new List&lt;{Return}&gt;();
        ///foreach(var o in obj){
        ///	if(o != null){
        ///		result.Add(o.ToDTO());
        ///	}
        ///}
        /// 
        ///return result;
        ///  的本地化字符串。
        /// </summary>
        internal static string BPTypeConvertListToDTOTemplate {
            get {
                return ResourceManager.GetString("BPTypeConvertListToDTOTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 if(obj == null) return null;
        ///return obj.ToDTO();
        /// 
        /// 的本地化字符串。
        /// </summary>
        internal static string BPTypeConvertToDTOTemplate {
            get {
                return ResourceManager.GetString("BPTypeConvertToDTOTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;Project ToolsVersion=&quot;4.0&quot; DefaultTargets=&quot;Build&quot; xmlns=&quot;http://schemas.microsoft.com/developer/msbuild/2003&quot;&gt;
        ///  &lt;PropertyGroup&gt;
        ///    &lt;Configuration Condition=&quot; &apos;$(Configuration)&apos; == &apos;&apos; &quot;&gt;Debug&lt;/Configuration&gt;
        ///    &lt;Platform Condition=&quot; &apos;$(Platform)&apos; == &apos;&apos; &quot;&gt;AnyCPU&lt;/Platform&gt;
        ///    &lt;ProductVersion&gt;8.0.30703&lt;/ProductVersion&gt;
        ///    &lt;SchemaVersion&gt;2.0&lt;/SchemaVersion&gt;
        ///    &lt;ProjectGuid&gt;{{Guid}}&lt;/ProjectGuid&gt;
        ///    &lt;OutputType&gt;Library&lt;/OutputType&gt;
        ///    &lt;AppDesignerFolder&gt;Pr [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string csproj {
            get {
                return ResourceManager.GetString("csproj", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 &lt;Project DefaultTargets = &quot;Compile&quot;
        ///    xmlns=&quot;http://schemas.microsoft.com/developer/msbuild/2003&quot; &gt;
        ///  &lt;ItemGroup&gt;
        ///    {RefrenceDll}
        ///  &lt;/ItemGroup&gt;
        ///  &lt;ItemGroup&gt;
        ///    {CompileFiles}
        ///  &lt;/ItemGroup&gt;
        ///  &lt;ItemGroup&gt;
        ///    {EmbeddedResource}
        ///  &lt;/ItemGroup&gt;
        ///&lt;/Project&gt; 的本地化字符串。
        /// </summary>
        internal static string csprojtargets {
            get {
                return ResourceManager.GetString("csprojtargets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 using System;
        ///using System.Collections.Generic;
        ///using System.Linq;
        ///using System.Text;
        ///using NHExt.Runtime.Model;
        ///namespace {NameSpace}{
        /// [Serializable]
        ///public partial class {Class} : {InhertClass}
        ///{ 的本地化字符串。
        /// </summary>
        internal static string DTOClassBeginTemplate {
            get {
                return ResourceManager.GetString("DTOClassBeginTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似  }
        ///} 的本地化字符串。
        /// </summary>
        internal static string DTOClassEndTemplate {
            get {
                return ResourceManager.GetString("DTOClassEndTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 using System;
        ///using System.Collections.Generic;
        ///using System.Linq;
        ///using System.Text;
        ///using NHExt.Runtime.EntityAttribute;
        ///using NHExt.Runtime.Model;
        /// namespace {NameSpace}{
        ///public partial class {Class}
        ///{
        ///}
        ///} 的本地化字符串。
        /// </summary>
        internal static string DTOClassExtendTemplate {
            get {
                return ResourceManager.GetString("DTOClassExtendTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 /// &lt;summary&gt;
        ////// {Memo}
        ////// &lt;/summary&gt;
        ///private {TypeString} {IsNull} _{Code} ;
        ////// &lt;summary&gt;
        ////// {Memo}
        ////// &lt;/summary&gt;
        ///[NHExt.Runtime.EntityAttribute.ColumnDescription(Code=&quot;{Code}&quot;,Description = &quot;{Memo}&quot;,EntityRefrence={EntityRefrence},IsViewer={IsViewer})]
        ///public virtual {TypeString} {IsNull} {Code}
        ///{
        ///get{
        ///return _{Code};
        ///}
        ///set{
        ///this._{Code}=value;
        ///}
        ///} 的本地化字符串。
        /// </summary>
        internal static string DTOCommonTemplate {
            get {
                return ResourceManager.GetString("DTOCommonTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 /// &lt;summary&gt;
        ////// {Memo}
        ////// &lt;/summary&gt;
        ///private List&lt;{TypeString}&gt; _{Code} = new List&lt;{TypeString}&gt;();
        ////// &lt;summary&gt;
        ////// {Memo}
        ////// &lt;/summary&gt;
        ///[NHExt.Runtime.EntityAttribute.ColumnDescription(Code=&quot;{Code}&quot;,Description = &quot;{Memo}&quot;,EntityRefrence={EntityRefrence},IsViewer={IsViewer})]
        ///public virtual List&lt;{TypeString}&gt; {Code}
        ///{
        ///   get { 
        ///   return _{Code}; 
        ///   }
        ///  set { 
        ///		_{Code} =value;
        ///	}
        /// } 的本地化字符串。
        /// </summary>
        internal static string DTOCompositionTemplate {
            get {
                return ResourceManager.GetString("DTOCompositionTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 /// &lt;summary&gt;
        ////// {Memo}
        ////// &lt;/summary&gt;
        ///private int _{Code} ;
        ////// &lt;summary&gt;
        ////// {Memo}
        ////// &lt;/summary&gt;
        ///[NHExt.Runtime.EntityAttribute.ColumnDescription(Code=&quot;{Code}&quot;,Description = &quot;{Memo}&quot;,EntityRefrence={EntityRefrence},IsViewer={IsViewer})]
        ///public virtual int {Code}
        ///{
        ///get{
        ///return _{Code};
        ///}
        ///set{
        ///this._{Code}=value;
        ///}
        ///}
        /// 的本地化字符串。
        /// </summary>
        internal static string DTOEnumRefrenceTemplate {
            get {
                return ResourceManager.GetString("DTOEnumRefrenceTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 /// &lt;summary&gt;
        ////// {Memo}
        ////// &lt;/summary&gt;
        ///private {TypeString} _{Code} ;
        ////// &lt;summary&gt;
        ////// {Memo}
        ////// &lt;/summary&gt;
        ///[NHExt.Runtime.EntityAttribute.ColumnDescription(Code=&quot;{Code}&quot;,Description = &quot;{Memo}&quot;,EntityRefrence={EntityRefrence},IsViewer={IsViewer})]
        ///public virtual {TypeString} {Code}
        ///{
        ///get{
        ///return _{Code};
        ///}
        ///set{
        ///this._{Code}=value;
        ///}
        ///} 的本地化字符串。
        /// </summary>
        internal static string DTORefrenceTemplate {
            get {
                return ResourceManager.GetString("DTORefrenceTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 case &quot;{Code}&quot; :
        ///	this._{Code} = this.TransferValue&lt;{TypeString}{IsNull}&gt;(obj);
        ///	break; 的本地化字符串。
        /// </summary>
        internal static string DTOSetCommonValueTemplate {
            get {
                return ResourceManager.GetString("DTOSetCommonValueTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 case &quot;{Code}&quot; :
        ///	this._{Code} = this.TransferValue&lt;List&lt;{TypeString}&gt; &gt;(obj);
        ///	break;
        /// 的本地化字符串。
        /// </summary>
        internal static string DTOSetListValueTemplate {
            get {
                return ResourceManager.GetString("DTOSetListValueTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 	public override void SetValue(object obj, string memberName)
        ///	{
        ///		switch(memberName){ 的本地化字符串。
        /// </summary>
        internal static string DTOSetValueBeginTemplate {
            get {
                return ResourceManager.GetString("DTOSetValueBeginTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 		default:
        ///			base.SetValue(obj,memberName);
        ///			break;
        ///		}
        ///	}
        ///
        /// 的本地化字符串。
        /// </summary>
        internal static string DTOSetValueEndTemplate {
            get {
                return ResourceManager.GetString("DTOSetValueEndTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 using System;
        ///using System.Collections.Generic;
        ///using System.Linq;
        ///using System.Text;
        ///using NHExt.Runtime.EntityAttribute;
        ///using NHExt.Runtime.Model;
        ///using NHExt.Runtime.Session;
        /// namespace {NameSpace}{
        /// [Serializable]
        ///[Bussines(EntityName = &quot;{EntityName}&quot;,Range={Range},OrgFilter={OrgFilter},Table=&quot;{TableName}&quot;)]
        ///public partial class {Class} : {InhertClass}
        ///{
        /// private EntityKey&lt;{Class}&gt; _key;
        ///  public new virtual EntityKey&lt;{Class}&gt; Key
        ///   {
        ///      get
        ///    {
        ///       return this.GetEntityKey&lt;{C [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string EntityClassBeginTemplate {
            get {
                return ResourceManager.GetString("EntityClassBeginTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 	public override NHExt.Runtime.Model.BaseDTO ToBaseDTO(){
        ///		return this.ToDTO();
        ///	}
        /// }
        ///}
        /// 的本地化字符串。
        /// </summary>
        internal static string EntityClassEndTemplate {
            get {
                return ResourceManager.GetString("EntityClassEndTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 using System;
        ///using System.Collections.Generic;
        ///using System.Linq;
        ///using System.Text;
        ///using NHExt.Runtime.EntityAttribute;
        ///using NHExt.Runtime.Model;
        ///using NHExt.Runtime.Session;
        /// namespace {NameSpace}{
        ///public partial class {Class}
        ///{
        ///
        ///private void FromDTOImpl(Deploy.{Class}DTO dto)
        ///{
        ///   
        ///}
        ///private void ToDTOImpl(Deploy.{Class}DTO dto)
        ///{
        ///   
        ///}
        /// private void OnSetDefaultValue()
        ///{
        ///   
        ///}
        ///private void OnValidate()
        ///{
        ///  
        ///}
        /// private void OnInserting()
        ///{
        ///   
        ///}
        /// private void OnInserted( [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string EntityClassExtendTemplate {
            get {
                return ResourceManager.GetString("EntityClassExtendTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 cloneObj.{Code} = this.{Code};
        /// 的本地化字符串。
        /// </summary>
        internal static string EntityCloneCommonTemplate {
            get {
                return ResourceManager.GetString("EntityCloneCommonTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 if(this.{Code} != null){
        ///	cloneObj.{Code} = new {TypeString}();
        ///	cloneObj.{Code}.EnumValue = this.{Code}.EnumValue;
        ///	cloneObj.{Code}.Code = this.{Code}.Code;
        ///	cloneObj.{Code}.Name = this.{Code}.Name;
        ///}else{
        ///	cloneObj.{Code} = null;
        ///} 的本地化字符串。
        /// </summary>
        internal static string EntityCloneEnumTemplate {
            get {
                return ResourceManager.GetString("EntityCloneEnumTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 public override NHExt.Runtime.Model.BaseEntity Clone()
        ///{
        ///	{Class} cloneObj = new {Class}();
        ///	this.Clone(cloneObj);
        ///	return cloneObj;
        ///} 的本地化字符串。
        /// </summary>
        internal static string EntityCloneFunctionTemplate {
            get {
                return ResourceManager.GetString("EntityCloneFunctionTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 public virtual void Clone({Class} cloneObj) {
        ///    base.Clone(cloneObj);
        ///
        ///
        /// 的本地化字符串。
        /// </summary>
        internal static string EntityCloneObjBeginTemplate {
            get {
                return ResourceManager.GetString("EntityCloneObjBeginTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 } 的本地化字符串。
        /// </summary>
        internal static string EntityCloneObjEndTemplate {
            get {
                return ResourceManager.GetString("EntityCloneObjEndTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 if(this.{Code} != null){
        ///	cloneObj.{Code} = new {TypeString}();
        ///	cloneObj.{Code}.ID = this.{Code}.ID;
        ///}else{
        ///	cloneObj.{Code} = null;
        ///}
        ///
        /// 的本地化字符串。
        /// </summary>
        internal static string EntityCloneRefrenceTemplate {
            get {
                return ResourceManager.GetString("EntityCloneRefrenceTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 		entity.{Code} = dto.{Code};
        /// 的本地化字符串。
        /// </summary>
        internal static string EntityColumnFromDTOCommonTemplate {
            get {
                return ResourceManager.GetString("EntityColumnFromDTOCommonTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 		if(dto.{Code}.Count &gt; 0){
        ///			//entity.{Code}.Clear();
        ///			foreach({Class} childDTO in dto.{Code}){
        ///				{TypeString} subEntity = null;
        ///				foreach({TypeString} tmpChild in entity.{Code}){
        ///					if(tmpChild.ID == childDTO.ID){
        ///						subEntity = tmpChild;
        ///						break;
        ///					}
        ///				}
        ///				
        ///			    if(subEntity == null || entity.EntityState == NHExt.Runtime.Enums.EntityState.Add)
        ///				{
        ///				//新增的逻辑需要将父实体添加到缓存里面去，为了后来重新给子实体赋值父实体KEY
        ///					NHExt.Runtime.Session.Session.Current.InList(entity);
        ///					subEntit [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string EntityColumnFromDTOCompositionTemplate {
            get {
                return ResourceManager.GetString("EntityColumnFromDTOCompositionTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 		if(dto.{Code} &gt; 0)
        ///		{
        ///			entity.{Code}=({TypeString})dto.{Code};
        ///		}
        /// 的本地化字符串。
        /// </summary>
        internal static string EntityColumnFromDTOEnumTemplate {
            get {
                return ResourceManager.GetString("EntityColumnFromDTOEnumTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 		if(dto.{Code} &lt;=0){
        ///			entity.{Code}Key = null;
        ///		}
        ///		else {
        ///			entity.{Code}Key = new EntityKey&lt;{TypeString}&gt;(dto.{Code});
        ///		}
        /// 的本地化字符串。
        /// </summary>
        internal static string EntityColumnFromDTORefrenceTemplate {
            get {
                return ResourceManager.GetString("EntityColumnFromDTORefrenceTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 		dto.{Code} = this.{Code};
        /// 的本地化字符串。
        /// </summary>
        internal static string EntityColumnToDTOCommonTemplate {
            get {
                return ResourceManager.GetString("EntityColumnToDTOCommonTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 		dto.{Code}.Clear();
        ///		foreach ({TypeString} ce in this.{Code})
        ///		{
        ///			dto.{Code}.Add(ce.ToDTO());
        ///		}
        /// 的本地化字符串。
        /// </summary>
        internal static string EntityColumnToDTOCompositionTemplate {
            get {
                return ResourceManager.GetString("EntityColumnToDTOCompositionTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 		if (this.{Code} != null)
        ///        {
        ///           dto.{Code} = this.{Code}.EnumValue;
        ///        } 的本地化字符串。
        /// </summary>
        internal static string EntityColumnToDTOEnumTemplate {
            get {
                return ResourceManager.GetString("EntityColumnToDTOEnumTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 		if (this.{Code}Key != null)
        ///		{
        ///			dto.{Code} = this.{Code}Key.ID;
        ///		}
        /// 的本地化字符串。
        /// </summary>
        internal static string EntityColumnToDTORefrenceTemplate {
            get {
                return ResourceManager.GetString("EntityColumnToDTORefrenceTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 /// &lt;summary&gt;
        ////// {Memo}
        ////// &lt;/summary&gt;
        /////private {TypeString} {IsNull} _{Code} ;
        ////// &lt;summary&gt;
        ////// {Memo}
        ////// &lt;/summary&gt;
        ///[NHExt.Runtime.EntityAttribute.ColumnDescription(Code=&quot;{Code}&quot;,Description = &quot;{Memo}&quot;,EntityRefrence={EntityRefrence},IsViewer={IsViewer},IsBizKey={IsBizKey},IsNull={CanNull})]
        ///public virtual {TypeString}{IsNull} {Code}
        ///{
        ///get{
        /// return this.GetValue&lt;{TypeString}{IsNull}&gt;(&quot;{Code}&quot;);
        ///}
        ///set{
        ///this.SetValue&lt;{TypeString}{IsNull}&gt;(&quot;{Code}&quot;, value);}
        ///}
        /// 的本地化字符串。
        /// </summary>
        internal static string EntityCommonTemplate {
            get {
                return ResourceManager.GetString("EntityCommonTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 /// &lt;summary&gt;
        ////// {Memo}
        ////// &lt;/summary&gt;
        ///[NHExt.Runtime.EntityAttribute.Refrence(RefType=NHExt.Runtime.Enums.RefrenceTypeEnum.Composition,TargetEntity=&quot;{RefrenceEntity}&quot;)]
        ///[NHExt.Runtime.EntityAttribute.ColumnDescription(Code=&quot;{Code}&quot;,Description = &quot;{Memo}&quot;,EntityRefrence={EntityRefrence},IsViewer={IsViewer})]
        ///public virtual IList&lt;{TypeString}&gt; {Code}
        ///{
        ///	   get 
        ///	   { 
        ///			return this.GetComposition&lt;{TypeString}&gt;(&quot;{Code}&quot;); 
        ///	   }
        ///	  set 
        ///	  { 
        ///			this.SetComposition&lt;{TypeString}&gt;(&quot;{Code}&quot;,value) [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string EntityCompositionTemplate {
            get {
                return ResourceManager.GetString("EntityCompositionTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 
        ///public {Class}():base()
        /// {
        ///  this._entityName = &quot;{EntityName}&quot;; 的本地化字符串。
        /// </summary>
        internal static string EntityConstructorBeginTemplate {
            get {
                return ResourceManager.GetString("EntityConstructorBeginTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 } 的本地化字符串。
        /// </summary>
        internal static string EntityConstructorEndTemplate {
            get {
                return ResourceManager.GetString("EntityConstructorEndTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 ///根据聚合实体的主实体创建主实体的子实体
        ///public static {Class} Create({TypeString} primaryEntity){
        ///	{Class} entity= Create(false);
        ///	entity.{Code}=primaryEntity;
        ///	return entity;
        ///} 的本地化字符串。
        /// </summary>
        internal static string EntityCreateFuncTemplate {
            get {
                return ResourceManager.GetString("EntityCreateFuncTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 /// &lt;summary&gt;
        ////// {Memo}
        ////// &lt;/summary&gt;
        ///[NHExt.Runtime.EntityAttribute.Refrence(RefType=NHExt.Runtime.Enums.RefrenceTypeEnum.Enum,TargetEntity=&quot;{RefrenceEntity}&quot;)]
        ///[NHExt.Runtime.EntityAttribute.ColumnDescription(Code=&quot;{Code}&quot;,Description = &quot;{Memo}&quot;,EntityRefrence={EntityRefrence},IsViewer={IsViewer},IsBizKey={IsBizKey},IsNull={CanNull})]
        ///public virtual {TypeString} {Code}
        ///{
        ///get{
        ///  return this.GetEnum&lt;{TypeString}&gt;(&quot;{Code}&quot;);
        ///}
        ///set{
        ///  this.SetEnum&lt;{TypeString}&gt;(&quot;{Code}&quot;,value);
        ///	}
        ///} 的本地化字符串。
        /// </summary>
        internal static string EntityEnumRefrenceTemplate {
            get {
                return ResourceManager.GetString("EntityEnumRefrenceTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 	public virtual void FromDTO({Class} dto){
        ///		this.FromDTO(dto,this);
        ///	}
        ///	protected virtual void FromDTO({Class} dto , {TypeString} entity){
        ///		base.FromDTO(dto,entity);
        /// 的本地化字符串。
        /// </summary>
        internal static string EntityFromDTOBeginTemplate {
            get {
                return ResourceManager.GetString("EntityFromDTOBeginTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 		this.FromDTOImpl(dto);
        ///	}
        /// 的本地化字符串。
        /// </summary>
        internal static string EntityFromDTOEndTemplate {
            get {
                return ResourceManager.GetString("EntityFromDTOEndTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 /// &lt;summary&gt;
        ////// {Memo}
        ////// &lt;/summary&gt;
        ///[NHExt.Runtime.EntityAttribute.Refrence(RefType=NHExt.Runtime.Enums.RefrenceTypeEnum.PEntity,TargetEntity=&quot;{RefrenceEntity}&quot;)]
        ///[NHExt.Runtime.EntityAttribute.ColumnDescription(Code=&quot;{Code}&quot;,Description = &quot;{Memo}&quot;,EntityRefrence={EntityRefrence},IsViewer={IsViewer},IsBizKey={IsBizKey},IsNull={CanNull})]
        ///public virtual {TypeString} {Code}
        ///{
        ///get{
        /// return this.GetRefrence&lt;{TypeString}&gt;(&quot;{Code}&quot;);
        ///}
        ///set{
        /// this.SetRefrence&lt;{TypeString}&gt;(&quot;{Code}&quot;,value);
        ///}
        ///}
        ///// [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string EntityRefrenceCompositionTemplate {
            get {
                return ResourceManager.GetString("EntityRefrenceCompositionTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 /// &lt;summary&gt;
        ////// {Memo}
        ////// &lt;/summary&gt;
        ///[NHExt.Runtime.EntityAttribute.Refrence(RefType=NHExt.Runtime.Enums.RefrenceTypeEnum.Entity,TargetEntity=&quot;{RefrenceEntity}&quot;)]
        ///[NHExt.Runtime.EntityAttribute.ColumnDescription(Code=&quot;{Code}&quot;,Description = &quot;{Memo}&quot;,EntityRefrence={EntityRefrence},IsViewer={IsViewer},IsBizKey={IsBizKey},IsNull={CanNull})]
        ///public virtual {TypeString} {Code}
        ///{
        ///get{
        /// return this.GetRefrence&lt;{TypeString}&gt;(&quot;{Code}&quot;);
        ///}
        ///set{
        /// this.SetRefrence&lt;{TypeString}&gt;(&quot;{Code}&quot;,value);
        ///}
        ///}
        ////// [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string EntityRefrenceTemplate {
            get {
                return ResourceManager.GetString("EntityRefrenceTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似  public new virtual {TypeString} ToDTO()
        ///	{
        ///        {TypeString} dto = new {TypeString}();
        ///        this.ToDTO(dto);
        ///        return dto;
        ///    }
        ///protected virtual void ToDTO({TypeString} dto)
        ///	{
        ///		  base.ToDTO(dto); 的本地化字符串。
        /// </summary>
        internal static string EntityToDTOBeginTemplate {
            get {
                return ResourceManager.GetString("EntityToDTOBeginTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 	
        ///	this.ToDTOImpl(dto);
        ///} 的本地化字符串。
        /// </summary>
        internal static string EntityToDTOEndTemplate {
            get {
                return ResourceManager.GetString("EntityToDTOEndTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 using System;
        ///using System.Collections.Generic;
        ///using System.Linq;
        ///using System.Text;
        ///using NHExt.Runtime.Enums;
        ///using NHExt.Runtime.Model;
        ///
        ///namespace {NameSpace}
        ///{
        ///	[Serializable]
        ///    public partial class {Class} : NHExt.Runtime.Model.BaseEnum
        ///    {
        ///        protected {Class}(int v, string code, string name)
        ///            : base(v, code, name, typeof({NameSpace}.{Class}))
        ///        {
        ///        }
        ///        public {Class}()
        ///            : base(typeof({NameSpace}.{Class}))
        ///        {
        ///
        ///        }
        ///		pu [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string EnumClassBeginTemplate {
            get {
                return ResourceManager.GetString("EnumClassBeginTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 }
        ///} 的本地化字符串。
        /// </summary>
        internal static string EnumClassEndTemplate {
            get {
                return ResourceManager.GetString("EnumClassEndTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 using System;
        ///using System.Collections.Generic;
        ///using System.Linq;
        ///using System.Text;
        ///using NHExt.Runtime.EntityAttribute;
        ///using NHExt.Runtime.Model;
        ///namespace {NameSpace}{
        ///public partial class {Class}
        ///{
        ///}
        ///} 的本地化字符串。
        /// </summary>
        internal static string EnumClassExtendTemplate {
            get {
                return ResourceManager.GetString("EnumClassExtendTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 /// &lt;summary&gt;
        ////// {Memo}
        ////// &lt;/summary&gt;
        ///private static {Class} _{Code};
        ////// &lt;summary&gt;
        ////// {Memo}
        ////// &lt;/summary&gt;
        ///[NHExt.Runtime.EntityAttribute.EnumProperty]
        ///public static {Class} {Code}
        ///{
        ///    get
        ///    {
        ///        if (_{Code} == null)
        ///        {
        ///            _{Code} = new {Class}({Value}, &quot;{Code}&quot;, &quot;{Name}&quot;);
        ///        }
        ///        return _{Code};
        ///    }
        ///}
        /// 的本地化字符串。
        /// </summary>
        internal static string EnumColumnTemplate {
            get {
                return ResourceManager.GetString("EnumColumnTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 using System;
        ///using System.Collections.Generic;
        ///using System.Linq;
        ///using System.Text;
        ///using NHExt.Runtime.Enums;
        ///using NHExt.Runtime.Model;
        ///
        ///namespace {NameSpace}
        ///{
        ///    public partial class {Class} : NHExt.Runtime.Model.BaseEnumDTO
        ///    {
        ///        protected {Class}(int v)
        ///            : base(v, &quot;{NameSpace}.{Class}&quot;)
        ///        {
        ///        }
        ///        public {Class}()
        ///            : base(&quot;{NameSpace}.{Class}&quot;)
        ///        {
        ///
        ///        }
        ///		public static explicit operator {Class}(int value)
        ///        {
        ///    [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string EnumDTOClassBeginTemplate {
            get {
                return ResourceManager.GetString("EnumDTOClassBeginTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 }
        ///} 的本地化字符串。
        /// </summary>
        internal static string EnumDTOClassEndTemplate {
            get {
                return ResourceManager.GetString("EnumDTOClassEndTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 using System;
        ///using System.Collections.Generic;
        ///using System.Linq;
        ///using System.Text;
        ///using NHExt.Runtime.EntityAttribute;
        ///using NHExt.Runtime.Model;
        ///namespace {NameSpace}{
        ///public partial class {Class}
        ///{
        ///}
        ///} 的本地化字符串。
        /// </summary>
        internal static string EnumDTOClassExtendTemplate {
            get {
                return ResourceManager.GetString("EnumDTOClassExtendTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 /// &lt;summary&gt;
        ////// {Memo}
        ////// &lt;/summary&gt;
        ///private static {Class} _{Code};
        ////// &lt;summary&gt;
        ////// {Memo}
        ////// &lt;/summary&gt;
        ///[NHExt.Runtime.EntityAttribute.EnumProperty]
        ///[NHExt.Runtime.EntityAttribute.ColumnDescription(Description = &quot;{Memo}&quot;)]
        ///public static {Class} {Code}
        ///{
        ///    get
        ///    {
        ///        if (_{Code} == null)
        ///        {
        ///            _{Code} = new {Class}({Value});
        ///        }
        ///        return _{Code};
        ///    }
        ///}
        /// 的本地化字符串。
        /// </summary>
        internal static string EnumDTOColumnTemplate {
            get {
                return ResourceManager.GetString("EnumDTOColumnTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Microsoft Visual Studio Solution File, Format Version 11.00
        ///# Visual Studio 2010
        ///{ProjectRefrence}
        ///Global
        ///	GlobalSection(SolutionConfigurationPlatforms) = preSolution
        ///		Debug|Any CPU = Debug|Any CPU
        ///		Release|Any CPU = Release|Any CPU
        ///	EndGlobalSection
        ///	GlobalSection(ProjectConfigurationPlatforms) = postSolution
        ///		{ProjectSelection}
        ///	EndGlobalSection
        ///	GlobalSection(SolutionProperties) = preSolution
        ///		HideSolutionNode = FALSE
        ///	EndGlobalSection
        ///EndGlobal
        ///
        /// 的本地化字符串。
        /// </summary>
        internal static string solution {
            get {
                return ResourceManager.GetString("solution", resourceCulture);
            }
        }
    }
}
